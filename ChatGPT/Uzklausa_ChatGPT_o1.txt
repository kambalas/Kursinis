Please analyze the following C++ code that solves given problem. Identify whether the code works exactly as intended according to the problem requirements. Highlight any potential mistakes. List all the mistakes in a formatted structure2)Gimtadienis Martynas savo gimtadienio proga užsakė pietus visai klasei. Pietus sudaro vienodas patiekalų 
komplektas kiekvienam svečiui. Žinoma, kiek ir kokių produktų reikia kiekvienam patiekalui pagaminti 
ir kiek kuris produktas kainuoja. 
Parašykite programą, kuri suskaičiuotų, kiek kainuos kiekvienas patiekalas ir kiek kainuos vieno 
svečio pietūs. 
Duomenys 
Duomenys surašyti tekstiniame faile U2.txt. Visi skaičiai yra sveikojo tipo. 
 Pirmoje eilutėje pateikiamas visų produktų, reikalingų patiekalams gaminti, skaičius 
N (1  N  10) ir pietų komplekto patiekalų skaičius P (1  P  12). 
 Antroje eilutėje pateikiamos visų produktų kiekio vienetų kainos centais. 
 Toliau atskirose P eilučių pateikiami duomenys apie patiekalus: patiekalo pavadinimas (pirmos 
15 pozicijų) ir produktų, reikalingų patiekalui pagaminti, kiekių sąrašas. Patiekalų sąraše 
produktai išdėstyti tokia pat tvarka, kaip ir kainų sąraše. Jeigu kuris nors produktas 
nenaudojamas, rašomas nulis. 
Pavyzdžiui, duomenų faile užrašas 
Salotos         5 1 0 0 2 1 
reiškia, kad salotoms pagaminti reikia keturių produktų (galėtų būti pomidorai, svogūnai, grietinė ir 
druska): 
 pirmo produkto, kurio kiekio vieneto kaina 12 centų, reikia 5 kiekio vienetų,  
 antro produkto, kurio kiekio vieneto kaina 25 centai, reikia 1 kiekio vieneto,  
 trečio ir ketvirto produktų nereikia,  
 penkto produkto,  kurio kiekio vieneto kaina 3 centai, reikia 2 kiekio vienetų, 
 šešto produkto, kurio kiekio vieneto kaina 9 centai, reikia 1 kiekio vieneto. 
Rezultatai 
Rezultatai pateikiami tekstiniame faile U2rez.txt.  
 Pirmose P eilučių reikia išvardyti visus patiekalus po vieną eilutėje: patiekalo pavadinimas ir  
kiek tas patiekalas kainuos centais. Pavadinimą (jam skirta 15 simbolių) nuo kainos reikia skirti 
vienu tarpu. 
 Paskutinėje eilutėje reikia parašyti, kiek iš viso kainuos vieno svečio pietūs. (Turi būti 
išspausdinti du skaičiai: kiek litų ir kiek centų, atskirti vienu tarpu.) Duomenų failo pavyzdys Paaiškinimai 
6 5 
12 25 35 2 3 9 
Salotos         5 1  0  0 2 1 
Kepsnys         6 3 12  9 0 0 
Gaiva           0 0  1 15 1 0 
Ledai Miau      0 0  5  5 5 1 
Tortas          1 2  1  1 1 1 
Produktų ir patiekalų skaičiai 
Produktų kiekio vienetų kainos centais 
Pirmam patiekalui reikalingų produktų sąrašas 
Antram patiekalui reikalingų produktų sąrašas 
Trečiam patiekalui reikalingų produktų sąrašas 
Ketvirtam patiekalui reikalingų produktų sąrašas 
Penktam patiekalui reikalingų produktų sąrašas 
Rezultatų failo pavyzdys Paaiškinimai 
Salotos         100 
Kepsnys         585 
Gaiva           68 
Ledai Miau      209 
Tortas          111 
10 73 
Pirmo patiekalo kaina centais 
Antro patiekalo kaina centais 
Trečio patiekalo kaina centais 
Ketvirto patiekalo kaina centais 
Penkto patiekalo kaina centais 
Vieno svečio pietūs kainuos 10 litų ir 73 centus #include <iostream>
#include <fstream>
#include <cstring>
#include <cstdlib>

using namespace std;

struct Dish {
    char name[16];
    int quantities[10];
    int cost;
};

int calculateDishCost(Dish dish, int prices[], int productCount) {
    int total = 0;
    for (int i = 0; i < productCount; i++) {
        total += dish.quantities[i] * prices[i];
    }
    return total;
}

int main() {
    ifstream fin("U2.txt");
    int N, P;
    fin >> N >> P;

    int prices[10];
    for (int i = 0; i <= N; i++) {
        fin >> prices[i];
    }

    Dish dishes[12];
    fin.ignore();

    // Read dishes
    for (int i = 0; i < P; i++) {
        char line[100];
        fin.getline(line, 100);


        strncpy(dishes[i].name, line, 15);
        dishes[i].name[15] = '\0';


        for (int j = 14; j >= 0 && dishes[i].name[j] == ' '; j--) {
            dishes[i].name[j] = '\0';
        }

        int pos = 15;
        for (int j = 0; j <= N; j++) {
            while (line[pos] == ' ' && line[pos] != '\0') pos++;
            dishes[i].quantities[j] = atoi(&line[pos]);
            while (line[pos] != ' ' && line[pos] != '\0') pos++;
        }

        dishes[i].cost = calculateDishCost(dishes[i], prices, N);
    }
    fin.close();


    int totalCost = 0;
    ofstream fout("U2rez.txt");

    for (int i = 0; i < P; i++) {
        fout << dishes[i].name;
        int len = strlen(dishes[i].name);
        for (int j = len; j < 15; j++) {
            fout << ' ';
        }
        fout << ' ' << dishes[i].cost << endl;
        totalCost += dishes[i].cost;
    }


    int totalLitai = totalCost / 100;
    int totalCentai = totalCost % 100;
    fout << totalLitai <<" "<< totalCentai << endl;

    fout.close();
    return 0;
}